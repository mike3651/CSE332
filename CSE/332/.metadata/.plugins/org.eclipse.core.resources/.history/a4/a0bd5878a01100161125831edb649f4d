package parallelism;


/**
 * This class makes use of threads to add the values of an array up.
 * 
 * @author Michael Wilson
 * @version 1.0
 */
public class SumThread extends java.lang.Thread {
	// These fields will communicate across the threads.
	private int lo;
	private int hi;
	private int[] arr;
	private int ans = 0;
	
	/**
	 * Creates the thread.
	 *  
	 * @param a The array of numbers
	 * @param l The low end of the array.
	 * @param h The high end of the array.
	 */
	public SumThread(int[] a, int l, int h)
	{
		lo = l; hi = h; arr = a;
	}
	
	/**
	 * Method that we need.
	 */
	public void run() {
		for (int i = lo; i < hi; i++)
			ans += arr[i];
	}
	
	/**
	 * Sums up the values in the array.
	 * 
	 * @param arr The array to sum up.
	 */
	public int sum(int[] arr) {
		int len = arr.length;
		int ans = 0;
		// creates an array of 4 threads to work on the sum
		SumThread[] ts = new SumThread[4];
		
		// This does the parallel computations
		for (int i = 0; i < 4; i++) {
			// because there are four threads, each thread does a quarter
			// of the work
			ts[i] = new SumThread(arr, i * len / 4, (i + 1) * len / 4);
			ts[i].start();
		}
		
		// Bring all the answers together
		for (int i = 0; i < 4; i++) {
			ts[i].join();
		}
		
		return ans;
	}
}
